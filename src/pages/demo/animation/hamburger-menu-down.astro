---
import Layout from "@/layouts/Layout.astro";

const menu = [
  'Home',
  'About',
  'Work',
  'Contact',
];
---

<Layout>
  <header class="header js-header">
    <button class="hamburger js-menu-trigger">
      <span class="hamburger__line"></span>
    </button>

    <div class="hamburger-menu js-menu">
      <div class="hamburger-menu__overlay js-menu-overlay"></div>
      <ul class="hamburger-menu__list">
        {
          menu.map((item) => (
            <li class="hamburger-menu__item">{item}</li>
          ))
        }
      </ul>
    </div>
  </header>

  <main>
    <section class="section">
      <h1>Key Visual</h1>
    </section>
    <section class="section -second">
      <h1>second section</h1>
    </section>
  </main>
</Layout>

<style lang="scss">
  .header {
    --header-size: 56px;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    display: flex;
    background: #fff;
    border-bottom: 1px solid #000;
    &.js-active {
      .hamburger__line {
        &::before, &::after {
          translate: -50% -50%;
        }
        &::before {
          rotate: 45deg;
        }
        &::after {
          rotate: -45deg;
        }
      }
    }
  }

  .hamburger {
    position: relative;
    margin-left: auto;
    width: var(--header-size);
    aspect-ratio: 1;
    background: #000;
    cursor: pointer;
    &__line {
      &::before, &::after {
        content: '';
        position: absolute;
        left: 50%;
        top: 50%;
        width: calc(100% - 24px);
        height: 2px;
        background: #fff;
        transition-property: rotate;
        transition-duration: 0.3s;
      }
      &::before {
        translate: -50% calc(-50% - 4px);
      }
      &::after {
        translate: -50% calc(-50% + 4px);
      }
    }
  }

  .hamburger-menu {
    position: fixed;
    top: var(--header-size);
    left: 0;
    width: 100%;
    height: calc(100vh - var(--header-size));
    color: #fff;
    &.is-menu-open {
      .hamburger-menu__overlay {
        opacity: 1;
      }
      .hamburger-menu__list {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
      }
    }
    &__overlay {
      position: fixed;
      top: var(--header-size);
      left: 0;
      width: 100%;
      height: calc(100vh - var(--header-size));
      background: rgba(0, 0, 0, 0.5);
      opacity: 0;
      transition-property: opacity;
      transition-duration: 0.3s;
    }
    &__list {
      padding: 1.5rem 2rem;
      background: #000;
      display: flex;
      column-gap: 1.5rem;
      clip-path: polygon(0 0, 100% 0, 100% 0, 0% 0);
      transition-property: clip-path;
      transition-duration: 0.3s;
      @include mixin.mobile {
        padding: 1rem 1.5rem;
        column-gap: 1rem;
      }
    }
    &__item {
      font-size: 1.5rem;
      font-weight: 700;
      @include mixin.mobile {
        font-size: 1rem;
      }
    }
  }

  .section {
    padding-inline: 1.5rem;
    height: 100vh;
    display: grid;
    place-items: center;
    &.-second {
      background: #eee;
    }
    h1 {
      font-size: 5rem;
      font-weight: 700;
      text-align: center;
      text-transform: uppercase;
      @include mixin.mobile {
        font-size: 3rem;
      }
    }
  }
</style>

<script>
  class Hamburger {
    private header: HTMLElement | null = null;
    private trigger: HTMLElement | null = null;
    private menu: HTMLElement | null = null;
    private overlay: HTMLElement | null = null;

    constructor() {
      this.header = document.querySelector('.js-header');
      if (!this.header) return;
      this.init();
    }
    init() {
      this.trigger = document.querySelector('.js-menu-trigger');
      this.menu = document.querySelector('.js-menu');
      this.event();
    }
    event() {
      this.trigger.addEventListener('click', (e) => {
        this.toggle();
      })

      this.overlay = document.querySelector('.js-menu-overlay');
      this.overlay?.addEventListener('click', () => this.close());
    }
    toggle() {
      this.header.classList.contains('js-active') ? this.close() : this.open();
    }
    open() {
      this.header?.classList.add('js-active');
      this.menu?.classList.add('is-menu-open');

      document.body.style.overflow = 'hidden';
    }
    close() {
      this.header?.classList.remove('js-active');
      this.menu?.classList.remove('is-menu-open');
      document.body.style.overflow = 'auto';
    }
  }

  const hamburger = new Hamburger();
</script>
</script>