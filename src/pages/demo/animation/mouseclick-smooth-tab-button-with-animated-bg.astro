---
import Layout from '@/layouts/Layout.astro';
---

<Layout>
  <div class="container">
    <div class="tab__content">
      <div class="tab__background"></div>
      <button class="tab__button">Day</button>
      <button class="tab__button">Week</button>
      <button class="tab__button">Month</button>
      <button class="tab__button sp-none">Year</button>
    </div>
  </div>
</Layout>

<style lang="scss">
  .container {
    width: 100%;
    height: 100vh;
    display: grid;
    place-items: center;
    padding-inline: 15px;
  }

  .tab {
    &__content {
      --button-width: 5rem;
      --button-height: 3rem;
      --offset-width: 2px;
      --offset-height: 3px;
      position: relative;
      display: flex;
      align-items: center;
      height: var(--button-height);
      border-radius: calc(var(--button-height) / 2);
      background: #E5E7EB;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
      z-index: 1;
      @include mixin.phone {
        zoom: 0.8;
      }
    }
    &__background {
      --background-width: calc(var(--button-width) - var(--offset-width) * 2);
      --background-height: calc(var(--button-height) - var(--offset-height) * 2);
      position: absolute;
      top: 50%;
      left: var(--offset-width);
      translate: 0 -50%;
      width: var(--background-width);
      height: var(--background-height);
      background: #FFF;
      border-radius: calc(var(--background-height) / 2);
      z-index: -1;
    }
    &__button {
      width: var(--button-width);
      &.sp-none {
        @include mixin.phone {
          display: none;
        }
      }
    }
  }
</style>

<script>
  const tabBackground = document.querySelector('.tab__background');
  const tabButtons = document.querySelectorAll('.tab__button');

  const easeOutQuart = 'cubic-bezier(0.25, 1, 0.5, 1)';

  const getTranslateX = (el) => {
    const transform = getComputedStyle(el).transform;
    if (transform === 'none') return 0;
    const matrix = new DOMMatrix(transform);
    return matrix.m41; // X方向のtranslate値
  };

  const tabClickAnimation = (bg, targetOffset) => {
    const currentX = getTranslateX(bg);

    bg.animate(
      [
        { transform: `translateX(${currentX}px) scaleY(1)` },
        { transform: `translateX(${(currentX + targetOffset) / 2}px) scaleY(0.8)` },
        { transform: `translateX(${targetOffset}px) scaleY(1)` },
      ],
      {
        duration: 600,
        easing: easeOutQuart,
        fill: 'forwards'
      }
    );
  };

  tabButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const offset = (btn as HTMLElement).offsetLeft;
      tabClickAnimation(tabBackground, offset);
    });
  });

</script>